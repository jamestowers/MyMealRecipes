// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  output          = "./client"
  previewFeatures = ["nativeTypes"]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  slackId   String?  @unique
  email     String?  @unique
  timezone  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile Profile[]
  Token   Token[]
  Post    Post[]
}

model Token {
  createdAt DateTime  @default(now())
  expiresAt DateTime?
  token     String    @id
  updatedAt DateTime  @default(now())
  userId    Int?
  user      User?     @relation(fields: [userId], references: [id])
}

model Profile {
  id          Int     @id @default(autoincrement())
  displayName String?
  firstName   String
  lastName    String?
  image       String?
  title       String?
  bio         String? @db.VarChar(1000)
  userId      Int

  user User @relation(fields: [userId], references: [id])
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  body        String?   @db.VarChar(1000)
  image       String?
  publishedAt DateTime?
  authorId    Int

  author         User          @relation(fields: [authorId], references: [id])
  PostCategory   PostCategory? @relation(fields: [postCategoryId], references: [id])
  postCategoryId Int?
}

model PostCategory {
  id       Int    @id @default(autoincrement())
  title    String @unique
  parentId Int?

  parent       PostCategory?  @relation(fields: [parentId], references: [id])
  post         Post[]
  PostCategory PostCategory[] @relation("PostCategoryToPostCategory")
}
